#Flask
:파이썬으로 쓰인 웹 프레임워크로, 서버를 구동하는 데 필요한 여러 기능들을 제공합니다.

1. flask 패키지 설치
2. 시작 코드
from flask import Flask
app = Flask(__name__)

@app.route('/')
def home():
   return 'This is Home!'

if __name__ == '__main__':  
   app.run('0.0.0.0',port=5000,debug=True)


**파일 이름은 아무렇게나 해도 상관없지만,
통상적으로 flask 서버를 돌리는 파일은 app.py라고 이름 짓습니다.

3. URL 나누기
@app.route('/mypage')
def mypage():  
   return 'This is My Page!'
**url 별로 함수명이 같거나, route('/')내의 주소가 같으면 안돼요!

4. 디렉토리 구성
Flask 서버를 만들 때는 항상 프로젝트 폴더 안에 static, templates 폴더와 app.py를 먼저 만들고 시작해주세요.
templates 폴더는 HTML 파일을 담아두고 불러오는 역할을 합니다.
static 폴더는 html 파일 외에 이미지, css파일과 같은 파일을 담아두는 역할을 합니다.

5. HTML 파일 불러오기
html 파일을 app.py에서 불러온다. flask 프레임워크에 이미 구현되어 있는 내장함수 render_template를 이용할 수 있습니다.
@app.route('/')
def home():
   return render_template('index.html')

6. img file 불러오기
flask에서 띄울 때는 flask에서 미리 정의된 방법으로 경로를 입력해주어야 합니다. 그래서 ststic 폴더 안의 rome.jpg의 경로는 아래와 같이 써줍니다.
<img src="{{ url_for('static', filename='rome.jpg') }}"/>
위와 같이 적으면 flask가 html 정보를 보내줄 때 `{{ }}` 안의 내용을 상황에 맞게 바꿔 보내줍니다. 따옴표와 중괄호의 위치에 주의해 주세요.


7.GET/POST
- GET 요청 API코드

    ```python
    @app.route('/test', methods=['GET'])
    def test_get():
       title_receive = request.args.get('title_give')
       print(title_receive)
       return jsonify({'result':'success', 'msg': '이 요청은 GET!'})
    ```
-- GET 요청 확인 Ajax코드

    ```jsx
    $.ajax({
        type: "GET",
        url: "/test?title_give=봄날은간다",
        data: {},
        success: function(response){
           console.log(response)
        }
      })
    ```
-- POST 요청 API코드

    ```python
    @app.route('/test', methods=['POST'])
    def test_post():
       title_receive = request.form['title_give']
       print(title_receive)
       return jsonify({'result':'success', 'msg': '이 요청은 POST!'})
    ```
- POST 요청 확인 Ajax코드

    ```jsx
    $.ajax({
        type: "POST",
        url: "/test",
        data: { title_give:'봄날은간다' },
        success: function(response){
           console.log(response)
        }
      })
    ```